{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/AddCommentForm.js","components/ArticlesList.js","components/CommentsList.js","components/UpvotesSection.js","pages/article-content.js","pages/NotFound.js","pages/ArticlePage.js","pages/ArticlesListPage.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","AddCommentForm","articleName","setArticleInfo","useState","username","setUsername","commentText","setCommentText","addComment","a","fetch","method","body","JSON","stringify","text","headers","result","json","id","type","value","onChange","e","target","cols","rows","onClick","ArticlesList","articles","map","article","key","className","to","name","title","content","substring","CommentsList","comments","comment","UpvotesSection","upvotes","upvoteArticle","NotFound","ArticlePage","match","params","articleContent","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","ArticlesListPage","NavBar","exact","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6ef024e3.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst HomePage = () => (\n  <Fragment>\n    <h1>Hello Welcome to My Blog</h1>\n    <p>\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere ea aliquid eum! Labore, delectus consequatur nulla blanditiis incidunt, minima corporis in ad placeat voluptatem aspernatur quod? Maiores enim id laborum.\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Recusandae nesciunt veritatis vitae voluptatum doloribus error dolor illum minus ipsam expedita eos amet aspernatur cumque molestias culpa quia, porro saepe consequatur?\n    </p>\n    <p>Mollitia fuga, quos autem eveniet, magni itaque fugit quasi quidem quae cum praesentium vitae atque unde ipsam corrupti dignissimos? Suscipit voluptatem magnam vero repellat aut atque officia eveniet ipsum repellendus. Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam sed accusamus voluptatibus suscipit, nostrum expedita rerum, soluta eius maiores consectetur cupiditate obcaecati. Architecto ratione iure unde id eius sequi sunt. Quis, deleniti quasi qui iste architecto dolore asperiores, minima facere, exercitationem fugit unde sint. Explicabo repellendus labore, nam at rerum praesentium nemo in dicta ad, id perspiciatis eius quo corporis. Quo quasi iure, quas error dolore quia architecto officia nulla exercitationem dicta eum ab. Ullam repellendus dignissimos doloribus dicta iure excepturi eos amet fugiat. Necessitatibus veritatis laboriosam voluptate repudiandae quos?</p>\n    <p>\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere ea aliquid eum! Labore, delectus consequatur nulla blanditiis incidunt, minima corporis in ad placeat voluptatem aspernatur quod? Maiores enim id laborum.\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Recusandae nesciunt veritatis vitae voluptatum doloribus error dolor illum minus ipsam expedita eos amet aspernatur cumque molestias culpa quia, porro saepe consequatur?\n    </p>\n  </Fragment>\n)\n\nexport default HomePage;","import React, { Fragment } from 'react';\n\nconst AboutPage = () => (\n  <Fragment>\n    <h1>About Me</h1>\n    <p>\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere ea aliquid eum! Labore, delectus consequatur nulla blanditiis incidunt, minima corporis in ad placeat voluptatem aspernatur quod? Maiores enim id laborum.\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Recusandae nesciunt veritatis vitae voluptatum doloribus error dolor illum minus ipsam expedita eos amet aspernatur cumque molestias culpa quia, porro saepe consequatur?\n    </p>\n    <p>Mollitia fuga, quos autem eveniet, magni itaque fugit quasi quidem quae cum praesentium vitae atque unde ipsam corrupti dignissimos? Suscipit voluptatem magnam vero repellat aut atque officia eveniet ipsum repellendus. Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam sed accusamus voluptatibus suscipit, nostrum expedita rerum, soluta eius maiores consectetur cupiditate obcaecati. Architecto ratione iure unde id eius sequi sunt. Quis, deleniti quasi qui iste architecto dolore asperiores, minima facere, exercitationem fugit unde sint. Explicabo repellendus labore, nam at rerum praesentium nemo in dicta ad, id perspiciatis eius quo corporis. Quo quasi iure, quas error dolore quia architecto officia nulla exercitationem dicta eum ab. Ullam repellendus dignissimos doloribus dicta iure excepturi eos amet fugiat. Necessitatibus veritatis laboriosam voluptate repudiandae quos?</p>\n    <p>\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere ea aliquid eum! Labore, delectus consequatur nulla blanditiis incidunt, minima corporis in ad placeat voluptatem aspernatur quod? Maiores enim id laborum.\n      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Recusandae nesciunt veritatis vitae voluptatum doloribus error dolor illum minus ipsam expedita eos amet aspernatur cumque molestias culpa quia, porro saepe consequatur?\n    </p>\n  </Fragment>\n)\n\nexport default AboutPage;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n\n  const [username, setUsername] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: \"post\",\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const body = await result.json();\n    setArticleInfo(body);\n    setCommentText('');\n    setUsername('');\n  }\n\n  return (\n    <div id=\"add-comment-form\">\n      <label>\n        Name:\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      </label>\n      <label>\n        Comment:\n        <textarea cols=\"50\" rows=\"4\" value={commentText} onChange={(e) => setCommentText(e.target.value)}/>\n      </label>\n      <button onClick={addComment}>Submit</button>\n    </div>\n  )\n}\n\nexport default AddCommentForm;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ArticlesList = ({ articles }) => {\n  return(\n    <Fragment>\n      {articles.map((article, key) => (\n        <Link key={key} className=\"article-list-item\" to={`/article/${article.name}`}>\n          <h3 key={key}>{article.title}</h3>\n          <p>{article.content[0].substring(0, 150)}...</p>\n        </Link>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default ArticlesList;","import React, { Fragment } from 'react';\n\nconst CommentsList = ({ comments }) => {\n  return(\n    <Fragment>\n      <h3>Comments</h3>\n      {comments.map((comment, key) => (\n        <div key={key} className=\"comment\">\n          <h4>{comment.username}</h4>\n          <p>{comment.text}</p>\n        </div>\n      ))}\n    </Fragment>\n  )\n}\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n\n  const upvoteArticle = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: 'post',\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n  }\n\n  return(\n    <div id=\"upvotes-section\">\n      <button onClick={upvoteArticle}>Add Upvote</button>\n      <p>This post have been upvoted <strong>{upvotes}</strong> times!</p>\n    </div>\n  )\n}\n\nexport default UpvotesSection;","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React, { Fragment } from 'react';\n\nconst NotFound = () => (\n  <Fragment>\n    <h1>404 Not Found</h1>\n  </Fragment>\n)\n\nexport default NotFound;","import React, { Fragment, useState, useEffect } from 'react';\nimport AddCommentForm from '../components/AddCommentForm';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport articleContent from './article-content';\nimport NotFound from './NotFound';\n\nconst ArticlePage = ({ match }) => {\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    }\n    fetchData();\n  }, [name])\n\n  if (!article) return <NotFound />\n\n  const otherArticles = articleContent.filter(article => article.name !== name);\n\n  return(\n    <Fragment>\n      <h1>{article.title}</h1>\n      <UpvotesSection\n        articleName={name}\n        upvotes={articleInfo.upvotes}\n        setArticleInfo={setArticleInfo}\n      />\n      {article.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      ))}\n      <CommentsList comments={articleInfo.comments} />\n      <AddCommentForm\n        articleName={name}\n        setArticleInfo={setArticleInfo}\n      />\n      <h2>Other Articles</h2>\n      <ArticlesList articles={otherArticles} />\n    </Fragment>\n  )\n}\n\nexport default ArticlePage;","import React, { Fragment } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticlesListPage = () => {\n  return (\n    <Fragment>\n      <h1>Articles</h1>\n      <ArticlesList articles={articleContent} />\n    </Fragment>\n  )\n}\n\nexport default ArticlesListPage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n  return(\n    <nav>\n      <ul>\n        <li>\n          <NavLink exact to=\"/\" >Home</NavLink>\n          <NavLink exact to=\"/about\" >About</NavLink>\n          <NavLink exact to=\"/articles-list\" >Articles</NavLink>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default NavBar;","import React from 'react';\nimport HomePage from './pages/HomePage';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AboutPage from './pages/AboutPage';\nimport ArticlePage from './pages/ArticlePage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport NotFound from './pages/NotFound';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/articles-list\" component={ArticlesListPage} />\n            <Route path=\"/article/:name\" component={ArticlePage} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}